{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"prot",
				"prototype"
			],
			[
				"pro",
				"prototype"
			],
			[
				"fun",
				"function"
			],
			[
				"repo",
				"repositories"
			],
			[
				"rep",
				"repoTemplate"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"rub",
				"Format: Ruby"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			]
		],
		"width": 575.0
	},
	"console":
	{
		"height": 139.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/duncan/j/test/README.md",
		"/home/duncan/j/troll/app.js",
		"/home/duncan/j/cb.js",
		"/home/duncan/.config/sublime-text-2/Packages/User/Preferences.sublime-settings",
		"/home/duncan/j/troll/lib/controllers/hello.js",
		"/home/duncan/j/test/views/home/index.ejs",
		"/home/duncan/j/test/config/application.js",
		"/home/duncan/j/troll/Readme.md",
		"/home/duncan/j/test/Procfile",
		"/home/duncan/j/test/app.js",
		"/home/duncan/j/bogart-gen/app.js",
		"/home/duncan/j/bogart-gen/makeController.js",
		"/home/duncan/j/bogart-gen/makeApp.js",
		"/home/duncan/j/scrivener/app.js",
		"/home/duncan/j/bogart-gen/node_modules/scrivener/app.js",
		"/home/duncan/j/troll/lib/controllers/index.js",
		"/home/duncan/j/troll/lib/controllers/ohai.js",
		"/home/duncan/j/bogart-gen/templates/controller.js",
		"/home/duncan/j/bogart-gen/templates/accessor.js",
		"/home/duncan/j/bogart-gen/package.json",
		"/home/duncan/j/troll/lib/controllers/hiworld.js",
		"/home/duncan/j/bogart-gen/makeAccessor.js",
		"/home/duncan/j/ohai/lib/controllers/hello.js",
		"/home/duncan/j/ohai/lib/controllers/index.js",
		"/home/duncan/j/ohai/app.js",
		"/home/duncan/j/scrivener/package.json",
		"/home/duncan/j/scrivener/scrivener.js",
		"/home/duncan/j/bogart-gen/scrivener.js",
		"/home/duncan/j/ohai/package.json",
		"/home/duncan/j/lol/lib/accessors/index.js",
		"/home/duncan/j/bogart-gen/templates/app.js",
		"/home/duncan/j/lol/lib/controllers/index.js",
		"/home/duncan/j/bogart-gen/templates/controllerIndex.js",
		"/home/duncan/j/bogart-gen/templates/accessorIndex.js",
		"/home/duncan/j/bogart-gen/templates/appjs.js",
		"/home/duncan/j/lol/app.js",
		"/home/duncan/j/lol/lib/controllers/goodbye.js",
		"/home/duncan/j/lol/lib/controllers/static-content.js",
		"/home/duncan/j/lol/lib/controllers/hello.js",
		"/home/duncan/j/wb-user/main.js",
		"/home/duncan/j/givechat/web/app.js",
		"/home/duncan/j/givechat/web/lib/apis/categoryApi.js",
		"/home/duncan/j/givechat/web/lib/repositories/auctionRepo.js",
		"/home/duncan/j/bogart-gen/templates/repo.js",
		"/home/duncan/j/givechat/web/lib/repositories/repo.js",
		"/home/duncan/j/bogart-gen/templates/middleware.js",
		"/home/duncan/j/bogart-gen/templates/util.js",
		"/home/duncan/j/bogart-base/lib/util.js",
		"/home/duncan/j/bogart-gen/makeRepo.js",
		"/home/duncan/j/bogart-gen/makeApi.js",
		"/home/duncan/j/bogart-gen/README.md",
		"/home/duncan/j/bogart-gen/templates/api.js",
		"/home/duncan/j/givechat/web/lib/apis/auctionApi.js",
		"/home/duncan/j/bogart-base/config/package.json",
		"/home/duncan/j/bogart-gen/lib/apis/auctionApi.js",
		"/home/duncan/j/gen/package.json",
		"/home/duncan/j/gen/makeApi.js",
		"/home/duncan/j/gen/app.js",
		"/home/duncan/j/gen/makeRepo.js",
		"/home/duncan/j/gen/lib/apis/auctionApi.js",
		"/home/duncan/j/gen/lib/repositories/auctionRepo.js",
		"/home/duncan/j/gen/workspace.js",
		"/home/duncan/j/gen/testApi.js",
		"/home/duncan/j/gen/testRepo.js",
		"/home/duncan/j/givechat/web/lib/repositories/mailRepo.js",
		"/home/duncan/j/givechat/web/lib/models/transaction.js",
		"/home/duncan/j/givechat/web/lib/models/auction.js",
		"/home/duncan/j/wb-user/lib/repositories/mailRepo.js",
		"/home/duncan/j/gen/components/repo.js",
		"/home/duncan/j/wb-user/package.json",
		"/home/duncan/j/gen/fs.writeFile('message.txt', 'Hello Node', function",
		"/home/duncan/j/givechat/web/settings.js",
		"/home/duncan/j/wb-user/settings.js",
		"/home/duncan/.rvm/gems/ruby-2.0.0-p195/gems/cramp-0.15.1/lib/cramp/callbacks.rb",
		"/home/duncan/.rvm/gems/ruby-2.0.0-p195/gems/cramp-0.15.1/lib/cramp/abstract.rb",
		"/home/duncan/r/stn/unicorn.rb",
		"/home/duncan/r/stn/config.ru",
		"/home/duncan/r/stn/.env",
		"/home/duncan/r/stn/Procfile",
		"/home/duncan/r/stn/config/unicorn.rb",
		"/home/duncan/r/stn/config/config.ru"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"bar",
			"ion(",
			"console.log",
			", process.cwd()",
			"real",
			"Source",
			"source",
			"filePath",
			"realPath",
			"Accessor",
			"Controller",
			"controllers",
			"if (filePath instanceof Array) {\n	    var realPath = path.join(dir, appName, path.join(filePath));\n	  } else {\n	    var realPath = path.join(dir, appName, filePath);\n	  }",
			"instanceOf",
			"Controller",
			"controllers",
			"\"",
			"/",
			"routers",
			"controllers",
			"\\t",
			"API",
			"/api/",
			"\"",
			"yellow",
			"write",
			"mkDir",
			":",
			"function ",
			"curdir",
			"]",
			"[",
			"path.join(",
			"fs.mkdir(path.join(curdir, appName, ",
			"mkDir(",
			"fs.mkdir(path.join(curdir, appName, ",
			"write(",
			"fs.writeFile(path.join(curdir, appName, ",
			"api",
			"repo",
			"\"",
			"/templates",
			"fs.writeFile('lib/apis/' + modelName + 'Api.js', genString, function (err) {\n              if (err) {\n                console.log(\"Error generating \" + modelName + \" API:\\n\\n\" + err)\n                throw err;\n              }\n              \n              console.log(modelName.green + \" API successfully generated!\".green)",
			"Api",
			"API",
			"fs.writeFile('lib/repositories/' + modelName + 'Repo.js', genString, function (err) {\n              if (err) {\n                console.log(\"Error\".red + \" generating \" + modelName + \" Repo:\\n\\n\" + err)\n                throw err;\n              }\n              \n              console.log(modelName.green + \" Repo successfully generated!\".green)",
			"  console.log(modelName.green + \" Repo successfully generated!\".green)",
			"fs.writeFile('lib/repositories/' + modelName + 'Repo.js', genString, function (err) {\n              if (err) {\n                console.log(\"Error\".red + \" generating \" + modelName + \" Repo:\\n\\n\" + err)\n                throw err;\n              }\n              \n              console.log(modelName.green + \" Repo successfully generated!\".green)\n            })",
			"API succe",
			"modelName + \" Repo successfully gen",
			"modelName + \" Rep",
			"generated!",
			"Error g",
			"readdir",
			"Repo",
			"Repo.js",
			"repositories",
			"apis",
			"repositories",
			"API",
			"Api",
			"apis",
			"repositories",
			"\"",
			"repo",
			"auction",
			"\"",
			"Auction",
			"auction",
			"api",
			"repo",
			"  \\t",
			"      \\t",
			"\\t",
			"repoTemplate",
			"auction",
			"del",
			"auction",
			"\"",
			"__setId",
			"modelName",
			"\"",
			"unicorn"
		],
		"highlight": true,
		"in_selection": true,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"var realPath = path.join(dir, appName, filePath);",
			"instanceof",
			"'",
			";",
			"controllers",
			"  ",
			"a",
			"",
			"'",
			"s.write",
			"s.mkDir",
			"dir",
			"mkDir(",
			"write(",
			"'",
			"repo",
			"Api",
			"stat",
			"API",
			"Api.js",
			"apis",
			"repositories",
			"'",
			"\" + modelName + \"",
			"'",
			"\" + modelName + \"",
			"\\t",
			"",
			"template",
			"\" + modelName + \"",
			"'"
		],
		"reverse": false,
		"show_context": false,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"",
				"/home/duncan/j/bogart-base/app.sublime-project"
			]
		],
		"width": 380.0
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true
}
